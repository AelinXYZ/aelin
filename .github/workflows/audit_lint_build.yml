name: Aelin CI

on:
  push:
  pull_request:
    branches: [main, dev]

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"
      - run: yarn install --immutable --immutable-cache --check-cache

  lint:
    needs: audit
    # run only on audit success or audit skipped
    if: always() && (needs.audit.result == 'success' || needs.audit.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"
      - run: yarn install --immutable --immutable-cache --check-cache
      - run: yarn lint

  # lint:
  #   needs: audit
  #   # run only on audit success or audit skipped
  #   if: always() && (needs.audit.result == 'success' || needs.audit.result == 'skipped')
  #   runs-on: ubuntu-latest

  #   container:
  #     image: synthetixio/docker-node:16.17-alpine

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2

  #     - name: Set npm cache directory
  #       run: npm config set cache .npm-cache --global
  #       continue-on-error: true

  #     - uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
  #       with:
  #         path: |
  #           .npm-cache
  #           node_modules
  #         key: ${{ runner.os }}-alpine-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-alpine-node-
  #       continue-on-error: true

  #     # fixes permission issues on gh actions + docker + npm@8
  #     - name: Chown workspace
  #       run: chown -R $(whoami) .

  #     # mkdir -p node_modules fixes https://github.com/npm/cli/issues/3208 starting from npm@7
  #     - name: Install dependencies
  #       run: |
  #         mkdir -p node_modules
  #         npm install --prefer-offline --no-audit --legacy-peer-deps

  #     - name: Lint
  #       run: npm run lint:sarif

  #     - name: Upload lint results
  #       if: always()
  #       uses: github/codeql-action/upload-sarif@21830ef0c1f0f06f2d82ba3f1f07cb3ffe543ed7 # pin@codeql-bundle-20210517
  #       with:
  #         sarif_file: lint-results.sarif
  #       continue-on-error: true

  # foundry-tests:
  #   runs-on: ubuntu-latest
  #   env:
  #     ALCHEMY_URL: ${{ secrets.ALCHEMY_URL }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - uses: actions/setup-node@v2

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly

  #     - name: Install deps
  #       run: forge install

  #     - name: Run Tests without fork
  #       run: forge test --no-match-contract NftCheck

  #     - name: Run NftCheck tests with fork
  #       run: forge test --match-contract NftCheck --fork-url ${ALCHEMY_URL}
